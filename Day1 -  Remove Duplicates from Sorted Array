Solution1 - Brute Force and Time Complexity - O(NlogN) -> NlogN + N, Space Complexity - O(N)

class Solution {
public:
    int removeDuplicates(vector<int>& nums) {
        set<int> s;
        for(auto i : nums){ //N
            s.insert(i); // logN
        }
        int index = 0;
        for(auto i : s){
            nums[index] = i;
            index++;
        }
        return index;
    }
};

Solution2 - Best Solution - Time Complexity - O(N) and Space Complexity - O(1)
2 pointer approach

class Solution {
public:
    int removeDuplicates(vector<int>& arr) {
        int i = 0;
        for(int j=1;j<arr.size();j++){
            if(arr[j] != arr[i]){
                arr[i+1] = arr[j];
                i++;
            }
        }
        return i+1;
    }
};
